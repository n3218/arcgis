{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/DisplayMapYT.js","globalVariables.js","pages/DisplayMap.js","pages/DisplayYourLocation.js","pages/AddToMap.js","pages/AddFeature.js","pages/FindPlaces.js","pages/DisplayWebMap.js","pages/SfiEmbeddedWidgets.js","pages/SfiSketchPolygon.js","pages/ExploringSketch.js","pages/StyleFeatureLayer.js","pages/DisplayPopUp.js","pages/ImportData.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","DisplayMapYT","MapEl","useRef","useEffect","view","loadModules","css","MapView","webmap","WebMap","basemap","map","center","zoom","container","current","destroy","ref","ARCGIS_API_KEY","DisplayMap","mapRef","esriConfig","apiKey","Map","DisplayYourLocation","locate","Locate","useHeadingEnabled","goToOverride","options","target","scale","goTo","ui","add","AddToMap","graphicsLayer","GraphicsLayer","pointGraphic","Graphic","geometry","type","longitude","latitude","symbol","color","outline","width","polylineGraphic","paths","polygonGraphic","rings","attributes","Name","Description","popupTemplate","title","content","AddFeature","trailheadsLayer","FeatureLayer","url","trailsLayer","parksLayer","FindPlaces","select","document","createElement","setAttribute","forEach","p","option","value","innerHTML","appendChild","locator","Locator","findPlaces","category","pt","addressToLocations","location","categories","maxLocations","outFields","results","popup","close","graphics","removeAll","result","size","watch","val","addEventListener","event","DisplayWebMap","portalItem","scalebar","ScaleBar","legend","Legend","SfiEmbeddedWidgets","mapView","homeWidget","Home","position","index","locateWidget","graphic","searchWidget","Search","basemapToggle","BasemapToggle","nextBasemap","scaleBar","ccWidget","CoordinateConversion","multipleConversions","SfiSketchPolygon","sketchLayer","sketch","Sketch","layer","creationMode","visibleElements","createTools","point","polyline","polygon","rectangle","circle","selectionTools","undoRedoMenu","viewModel","updateOnGraphicClick","on","console","log","state","window","confirm","deleted","onClick","getItemAt","alert","oldSymbol","style","setTimeout","ExploringSketch","basemapGallery","BasemapGallery","source","query","StyleFeatureLayer","trailheads","renderer","height","labelingInfo","haloColor","haloSize","font","family","weight","labelPlacement","labelExpressionInfo","expression","trails","visualVariables","field","minDataValue","maxDataValue","minSize","maxSize","opacity","bikeTrails","definitionExpression","createFillSymbol","label","openSpacesRenderer","uniqueValueInfos","openspaces","DisplayPopUp","mediaInfos","caption","fields","normalizeField","tooltipField","fieldInfos","fieldName","isEditable","tooltip","visible","format","stringFieldOption","places","digitSeparator","ImportData","App","className","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8HAAA,SAASA,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,K,mICyBfC,EAlCM,WACnB,IAAMC,EAAQC,iBAAO,MAyBrB,OAvBAC,qBAAU,WACR,IAAIC,EAcJ,OAbAC,sBAAY,CAAC,qBAAsB,eAAgB,CACjDC,KAAK,IACJd,MAAK,YAAwB,IAAD,mBAArBe,EAAqB,KACvBC,EAAS,IAAIC,EADU,MACH,CACxBC,QAAS,gBAEXN,EAAO,IAAIG,EAAQ,CACjBI,IAAKH,EACLI,OAAQ,EAAE,QAAS,QACnBC,KAAM,GACNC,UAAWb,EAAMc,aAGd,WACCX,IACJA,EAAKY,UACLZ,EAAO,UAMX,qCACE,8DACA,qBAAKL,GAAG,UAAUkB,IAAKhB,Q,0BChChBiB,EAAiB,uGCsCfC,EAhCI,WACjB,IAAMC,EAASlB,mBAuBf,OAtBAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,uBAGPN,EAAO,IAAIG,IAAQ,CACrBI,IAAKA,EACLC,OAAQ,EAAE,QAAS,QACnBC,KAAM,GACNC,UAAWM,EAAOL,UAGpB,OAAO,WACCX,IACJA,EAAKY,UACLZ,EAAO,UAMX,qCACE,6CACA,qBAAKL,GAAG,UAAUkB,IAAKG,Q,SCYdI,EAtCa,WAC1B,IAAMJ,EAASlB,mBA6Bf,OA5BAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,uBAEPN,EAAO,IAAIG,IAAQ,CACrBO,UAAWM,EAAOL,QAClBJ,IAAKA,EACLC,OAAQ,EAAE,GAAI,IACdC,KAAM,IAEFY,EAAS,IAAIC,IAAO,CACxBtB,KAAMA,EACNuB,mBAAmB,EACnBC,aAAc,SAAUxB,EAAMyB,GAE5B,OADAA,EAAQC,OAAOC,MAAQ,KAChB3B,EAAK4B,KAAKH,EAAQC,WAI7B,OADA1B,EAAK6B,GAAGC,IAAIT,EAAQ,YACb,WACCrB,IACJA,EAAKY,UACLZ,EAAO,UAKX,qCACE,uDACA,qBAAKL,GAAG,UAAUkB,IAAKG,Q,iBC6Ede,EA7GE,WACf,IAAMf,EAASlB,mBAoGf,OAnGAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,uBAEPN,EAAO,IAAIG,IAAQ,CACrBI,IAAKA,EACLC,OAAQ,EAAE,QAAS,QACnBC,KAAM,GACNC,UAAWM,EAAOL,UAEdqB,EAAgB,IAAIC,IAC1B1B,EAAIuB,IAAIE,GAGR,IAaME,EAAe,IAAIC,IAAQ,CAC/BC,SAdY,CACZC,KAAM,QACNC,WAAY,gBACZC,SAAU,kBAYVC,OAVyB,CACzBH,KAAM,gBACNI,MAAO,CAAC,IAAK,IAAK,IAClBC,QAAS,CACPD,MAAO,CAAC,IAAK,IAAK,KAClBE,MAAO,MAOXX,EAAcF,IAAII,GAGlB,IAaMU,EAAkB,IAAIT,IAAQ,CAClCC,SAde,CACfC,KAAM,WACNQ,MAAO,CACL,EAAE,iBAAkB,kBACpB,EAAE,iBAAkB,kBACpB,EAAE,iBAAkB,oBAUtBL,OAPuB,CACvBH,KAAM,cACNI,MAAO,CAAC,IAAK,IAAK,IAClBE,MAAO,KAMTX,EAAcF,IAAIc,GAGlB,IA0BME,EAAiB,IAAIX,IAAQ,CACjCC,SA3Bc,CACdC,KAAM,UACNU,MAAO,CACL,EAAE,iBAAkB,kBACpB,EAAE,iBAAkB,kBACpB,EAAE,iBAAkB,kBACpB,EAAE,gBAAiB,iBACnB,EAAE,iBAAkB,oBAqBtBP,OAlBuB,CACvBH,KAAM,cACNI,MAAO,CAAC,IAAK,IAAK,GAAI,IACtBC,QAAS,CACPD,MAAO,CAAC,IAAK,IAAK,KAClBE,MAAO,IAcTK,WAPiB,CACjBC,KAAM,UACNC,YAAa,kBAMbC,cAZoB,CACpBC,MAAO,SACPC,QAAS,mBAeX,OAHArB,EAAcF,IAAIgB,GAGX,WACC9C,IACJA,EAAKY,UACLZ,EAAO,UAMX,qCACE,gEACA,qBAAKL,GAAG,UAAUkB,IAAKG,Q,SCxDdsC,EAjDI,WACjB,IAAMtC,EAASlB,mBAwCf,OAvCAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,uBAEPN,EAAO,IAAIG,IAAQ,CACrBI,IAAKA,EACLC,OAAQ,EAAE,QAAS,QACnBC,KAAM,GACNC,UAAWM,EAAOL,UAId4C,EAAkB,IAAIC,UAAa,CACvCC,IAAK,yGAEPlD,EAAIuB,IAAIyB,GAGR,IAAMG,EAAc,IAAIF,UAAa,CACnCC,IAAK,qGAEPlD,EAAIuB,IAAI4B,EAAa,GAGrB,IAAMC,EAAa,IAAIH,UAAa,CAClCC,IAAK,mHAIP,OAFAlD,EAAIuB,IAAI6B,EAAY,GAEb,WACC3D,IACJA,EAAKY,UACLZ,EAAO,UAMX,qCACE,qDACA,qBAAKL,GAAG,UAAUkB,IAAKG,Q,SCoDd4C,EA/FI,WACjB,IAAM5C,EAASlB,mBAsFf,OArFAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,sBAEPN,EAAO,IAAIG,IAAQ,CACrBI,IAAKA,EACLC,OAAQ,CAAC,QAAS,SAClBC,KAAM,GACNC,UAAWM,EAAOL,UAGdkD,EAASC,SAASC,cAAc,SAAU,IAChDF,EAAOG,aAAa,QAAS,2BAC7BH,EAAOG,aAAa,QAAS,gEAHd,CAAC,yBAA0B,qBAAsB,cAAe,cAAe,OAAQ,SAI/FC,SAAQ,SAAUC,GACvB,IAAMC,EAASL,SAASC,cAAc,UACtCI,EAAOC,MAAQF,EACfC,EAAOE,UAAYH,EACnBL,EAAOS,YAAYH,MAErBnE,EAAK6B,GAAGC,IAAI+B,EAAQ,aACpB,IAAMU,EAAU,IAAIC,IAAQ,CAC1Bf,IAAK,2EAIP,SAASgB,EAAWC,EAAUC,GAC5BJ,EACGK,mBAAmB,CAClBC,SAAUF,EACVG,WAAY,CAACJ,GACbK,aAAc,GACdC,UAAW,CAAC,aAAc,eAE3B5F,MAAK,SAAU6F,GACdjF,EAAKkF,MAAMC,QACXnF,EAAKoF,SAASC,YAEdJ,EAAQhB,SAAQ,SAAUqB,GACxBtF,EAAKoF,SAAStD,IACZ,IAAIK,IAAQ,CACVa,WAAYsC,EAAOtC,WACnBZ,SAAUkD,EAAOT,SACjBrC,OAAQ,CACNH,KAAM,gBACNI,MAAO,UACP8C,KAAM,OACN7C,QAAS,CACPD,MAAO,UACPE,MAAO,QAIXQ,cAAe,CACbC,MAAO,cACPC,QAAS,yBAoBvB,OAXArD,EAAKwF,MAAM,cAAc,SAAUC,GAC7BA,GACFhB,EAAWZ,EAAOO,MAAOpE,EAAKQ,WAKlCqD,EAAO6B,iBAAiB,UAAU,SAAUC,GAC1ClB,EAAWkB,EAAMjE,OAAO0C,MAAOpE,EAAKQ,WAG/B,WACCR,IACJA,EAAKY,UACLZ,EAAO,UAMX,qCACE,6CACA,qBAAKL,GAAG,UAAUkB,IAAKG,Q,2BCnDd4E,EAvCO,WACpB,IAAM5E,EAASlB,mBA8Bf,OA7BAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMK,EAAS,IAAIC,IAAO,CACxBwF,WAAY,CACVlG,GAAI,sCAGJK,EAAO,IAAIG,IAAQ,CACrBI,IAAKH,EACLM,UAAWM,EAAOL,UAEdmF,EAAW,IAAIC,IAAS,CAC5B/F,KAAMA,IAERA,EAAK6B,GAAGC,IAAIgE,EAAU,eACtB,IAAME,EAAS,IAAIC,IAAO,CACxBjG,KAAMA,IAIR,OAFAA,EAAK6B,GAAGC,IAAIkE,EAAQ,aAEb,WACChG,IACJA,EAAKY,UACLZ,EAAO,UAMX,qCACE,mDACA,qBAAKL,GAAG,UAAUkB,IAAKG,Q,oCCiDdkF,EA7EY,WACzB,IAAMlF,EAASlB,mBAoEf,OAnEAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,YAEP6F,EAAU,IAAIhG,IAAQ,CACxBO,UAAWM,EAAOL,QAClBJ,IAAKA,EACLE,KAAM,EACND,OAAQ,EAAE,OAAQ,UAGd4F,EAAa,IAAIC,IAAK,CAC1BrG,KAAMmG,IAGRA,EAAQtE,GAAGC,IAAIsE,EAAY,CAAEE,SAAU,WAAYC,MAAO,IAG1D,IAAMC,EAAe,IAAIlF,IAAO,CAC9BtB,KAAMmG,EACNM,QAAS,IAAItE,IAAQ,CACnBK,OAAQ,CAAEH,KAAM,qBAIpB8D,EAAQtE,GAAGC,IAAI0E,EAAc,YAE7B,IAAME,EAAe,IAAIC,IAAO,CAC9B3G,KAAMmG,IAIRA,EAAQtE,GAAGC,IAAI4E,EAAc,CAAEJ,SAAU,YAAaC,MAAO,IAG7D,IAAMK,EAAgB,IAAIC,IAAc,CAEtC7G,KAAMmG,EACNW,YAAa,WAGfX,EAAQtE,GAAGC,IAAI8E,EAAe,aAE9B,IAAMG,EAAW,IAAIhB,IAAS,CAC5B/F,KAAMmG,IAGRA,EAAQtE,GAAGC,IAAIiF,EAAU,CACvBT,SAAU,gBAEZ,IAAMU,EAAW,IAAIC,IAAqB,CACxCjH,KAAMmG,EACNe,qBAAqB,IAKvB,OAFAf,EAAQtE,GAAGC,IAAIkF,EAAU,gBAElB,WACCb,IACJA,EAAQvF,UACRuF,EAAU,UAMd,qCACE,6DACA,qBAAKxG,GAAG,UAAUkB,IAAKG,Q,SCwGdmG,EA/KU,WACvB,IAEIhB,EACAiB,EACAC,EAJErG,EAASlB,mBACfmB,IAAWC,OAASJ,EAKpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,YAEX6F,EAAU,IAAIhG,IAAQ,CACpBO,UAAWM,EAAOL,QAClBJ,IAAKA,EACLE,KAAM,GACND,OAAQ,EAAE,SAAU,aAItB,IAAM4F,EAAa,IAAIC,IAAK,CAC1BrG,KAAMmG,IAERA,EAAQtE,GAAGC,IAAIsE,EAAY,CAAEE,SAAU,WAAYC,MAAO,IAE1D,IAAMC,EAAe,IAAIlF,IAAO,CAC9BtB,KAAMmG,EACNM,QAAS,IAAItE,IAAQ,CACnBK,OAAQ,CAAEH,KAAM,qBAGpB8D,EAAQtE,GAAGC,IAAI0E,EAAc,YAE7B,IAAMI,EAAgB,IAAIC,IAAc,CACtC7G,KAAMmG,EACNW,YAAa,WAEfX,EAAQtE,GAAGC,IAAI8E,EAAe,CAAEN,SAAU,WAAYC,MAAO,IAE7D,IAAMG,EAAe,IAAIC,IAAO,CAC9B3G,KAAMmG,IAERA,EAAQtE,GAAGC,IAAI4E,EAAc,CAAEJ,SAAU,YAAaC,MAAO,IAE7D,IAAMQ,EAAW,IAAIhB,IAAS,CAC5B/F,KAAMmG,IAERA,EAAQtE,GAAGC,IAAIiF,EAAU,CAAET,SAAU,gBAErC,IAAMU,EAAW,IAAIC,IAAqB,CACxCjH,KAAMmG,EACNe,qBAAqB,IAmEvB,OAjEAf,EAAQtE,GAAGC,IAAIkF,EAAU,gBAGzBI,EAAc,IAAInF,IAAc,CAAEtC,GAAI,gBACtCY,EAAIuB,IAAIsF,IACRC,EAAS,IAAIC,IAAO,CAClBC,MAAOH,EACPpH,KAAMmG,EAENqB,aAAc,SAEdC,gBAAiB,CACfC,YAAa,CACXC,OAAO,EACPC,UAAU,EACVC,SAAS,EACTC,WAAW,EACXC,QAAQ,GAEVC,eAAgB,CACd,uBAAuB,EACvB,mBAAmB,GAErBC,cAAc,MAIXC,UAAUC,sBAAuB,EACxChC,EAAQtE,GAAGC,IAAIuF,EAAQ,aAGvBA,EAAOe,GAAG,UAAU,SAAUzC,GAC5B0C,QAAQC,IAAI3C,GACQ,aAAhBA,EAAM4C,QACRF,QAAQC,IAAI3C,EAAMc,SAClBY,EAAOI,gBAAgBC,YAAYG,SAAU,EAC7CR,EAAOI,gBAAgBC,YAAYI,WAAY,EAC/CT,EAAOI,gBAAgBC,YAAYK,QAAS,EAC5CV,EAAOa,UAAUC,sBAAuB,EACxCd,EAAOI,gBAAgBQ,cAAe,MAO1CZ,EAAOe,GAAG,UAAU,SAAUzC,GAE5B,GADA0C,QAAQC,IAAI3C,GACO,WAAfA,EAAMtD,KACR,GAAImG,OAAOC,QAAQ,oCAEjBpB,EAAOI,gBAAgBC,YAAYG,SAAU,EAC7CR,EAAOI,gBAAgBC,YAAYI,WAAY,EAC/CT,EAAOI,gBAAgBC,YAAYK,QAAS,EAC5CV,EAAOa,UAAUC,sBAAuB,EACxCd,EAAOI,gBAAgBQ,cAAe,MACjC,CAEL,IAAMS,EAAU/C,EAAMP,SAAS,GAC/BgC,EAAYtF,IAAI4G,OAMf,WACCvC,IACJA,EAAQvF,UACRuF,EAAU,UAuChB,OACE,qCACE,2DACA,qBAAKxG,GAAG,UAAUkB,IAAKG,IACvB,gCACE,wBAAQrB,GAAG,YAAYgJ,QAtCL,SAAUhD,GAChC,IAAMc,EAAUW,EAAYhC,SAASwD,UAAU,GAC/C,GAAInC,EAAS,CACXoC,MAAM,6CACNR,QAAQC,IAAI7B,GACZ,IAAMqC,EAAYrC,EAAQjE,OAU1BiE,EAAQjE,OATU,CAChBH,KAAM,cACN0G,MAAO,QACPtG,MAAO,OACPC,QAAS,CACPD,MAAO,QACPE,MAAO,QAIX6F,OAAOQ,YAAW,WAChBvC,EAAQjE,OAASsG,IAChB,UAEHD,MAAM,6BAkBJ,gBAGA,wBAAQlJ,GAAG,gBAAgBgJ,QAjBL,SAAUhD,GACpCyB,EAAY/B,YACZgC,EAAOI,gBAAgBC,YAAYG,SAAU,EAC7CR,EAAOI,gBAAgBC,YAAYI,WAAY,EAC/CT,EAAOI,gBAAgBC,YAAYK,QAAS,EAC5CV,EAAOa,UAAUC,sBAAuB,EACxCd,EAAOI,gBAAgBQ,cAAe,GAWlC,2B,SCtFOgB,EAtFS,WACtB,IAAMjI,EAASlB,mBA6Ef,OA5EAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,uBAEP6F,EAAU,IAAIhG,IAAQ,CACxBI,IAAKA,EACLC,OAAQ,EAAE,QAAS,QACnBC,KAAM,GACNC,UAAWM,EAAOL,UAGhByG,EAAc,IAAInF,IAAc,CAAEtC,GAAI,gBAC1CY,EAAIuB,IAAIsF,GACR,IAAIC,EAAS,IAAIC,IAAO,CACtBC,MAAOH,EACPpH,KAAMmG,EACNqB,aAAc,SACdC,gBAAiB,CACfC,YAAa,CACXC,OAAO,EACPC,UAAU,EACVC,SAAS,EACTC,WAAW,EACXC,QAAQ,GAEVC,eAAgB,CACd,uBAAuB,EACvB,mBAAmB,GAErBC,cAAc,KAIlBZ,EAAOa,UAAUC,sBAAuB,EACxChC,EAAQtE,GAAGC,IAAIuF,EAAQ,aAGvBA,EAAOe,GAAG,UAAU,SAAUzC,GAER,aAAhBA,EAAM4C,QACRF,QAAQC,IAAI3C,EAAMc,SAClBY,EAAOI,gBAAgBC,YAAYG,SAAU,EAC7CR,EAAOI,gBAAgBC,YAAYI,WAAY,EAC/CT,EAAOI,gBAAgBC,YAAYK,QAAS,EAC5CV,EAAOa,UAAUC,sBAAuB,EACxCd,EAAOI,gBAAgBQ,cAAe,MAI1C,IAAMrB,EAAgB,IAAIC,IAAc,CACtC7G,KAAMmG,EACNW,YAAa,mBAEfX,EAAQtE,GAAGC,IAAI8E,EAAe,gBAG9B,IAAMsC,EAAiB,IAAIC,IAAe,CACxCnJ,KAAMmG,EACNiD,OAAQ,CACNC,MAAO,CACLjG,MAAO,qDAMb,OAFA+C,EAAQtE,GAAGC,IAAIoH,EAAgB,aAExB,WACC/C,IACJA,EAAQvF,UACRuF,EAAU,UAMd,qCACE,kDACA,qBAAKxG,GAAG,UAAUkB,IAAKG,QCyDdsI,EA7IW,WACxB,IAAMtI,EAASlB,mBAoIf,OAnIAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,uBAEPN,EAAO,IAAIG,IAAQ,CACrBI,IAAKA,EACLC,OAAQ,EAAE,QAAS,QACnBC,KAAM,GACNC,UAAWM,EAAOL,UA+Bd4I,EAAa,IAAI/F,UAAa,CAClCC,IAAK,gGACL+F,SA9ByB,CACzBnH,KAAM,SACNG,OAAQ,CACNH,KAAM,iBACNoB,IAAK,sEACLd,MAAO,OACP8G,OAAQ,SAyBVC,aAAc,CAtBS,CACvBlH,OAAQ,CACNH,KAAM,OACNI,MAAO,UACPkH,UAAW,OACXC,SAAU,MACVC,KAAM,CACJtE,KAAM,OACNuE,OAAQ,YACRf,MAAO,SACPgB,OAAQ,WAGZC,eAAgB,eAChBC,oBAAqB,CACnBC,WAAY,yBAShB3J,EAAIuB,IAAIyH,GAGR,IAmBMY,EAAS,IAAI3G,UAAa,CAC9BC,IAAK,4FACL+F,SArBqB,CACrBnH,KAAM,SACNG,OAAQ,CACNC,MAAO,SACPJ,KAAM,cACN0G,MAAO,SAETqB,gBAAiB,CACf,CACE/H,KAAM,OACNgI,MAAO,YACPC,aAAc,EACdC,aAAc,KACdC,QAAS,MACTC,QAAS,SAQbC,QAAS,MAGXnK,EAAIuB,IAAIqI,EAAQ,GAGhB,IASMQ,EAAa,IAAInH,UAAa,CAClCC,IAAK,4FACL+F,SAXyB,CACzBnH,KAAM,SACNG,OAAQ,CACNH,KAAM,cACN0G,MAAO,YACPtG,MAAO,OACPE,MAAO,QAMTiI,qBAAsB,qBAKxB,SAASC,EAAiBzG,EAAO3B,GAC/B,MAAO,CACL2B,MAAOA,EACP5B,OAAQ,CACNC,MAAOA,EACPJ,KAAM,cACN0G,MAAO,QACPrG,QAAS,CACPqG,MAAO,SAGX+B,MAAO1G,GAdX7D,EAAIuB,IAAI6I,EAAY,GAiBpB,IAAMI,EAAqB,CACzB1I,KAAM,eACNgI,MAAO,OACPW,iBAAkB,CAACH,EAAiB,gBAAiB,WAAYA,EAAiB,sBAAuB,WAAYA,EAAiB,aAAc,WAAYA,EAAiB,2BAA4B,aAGzMI,EAAa,IAAIzH,UAAa,CAClCC,IAAK,0GACL+F,SAAUuB,EACVL,QAAS,KAMX,OAHAnK,EAAIuB,IAAImJ,EAAY,GAGb,WACCjL,IACJA,EAAKY,UACLZ,EAAO,UAMX,qCACE,uDACA,qBAAKL,GAAG,UAAUkB,IAAKG,QCHdkK,EAhIM,WACnB,IAAMlK,EAASlB,mBAsHf,OArHAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,uBAEP6F,EAAU,IAAIhG,IAAQ,CACxBI,IAAKA,EACLC,OAAQ,EAAE,QAAS,QACnBC,KAAM,GACNC,UAAWM,EAAOL,UAQd4I,EAAa,IAAI/F,UAAa,CAClCC,IAAK,uGACLuB,UAAW,CAAC,WAAY,WAAY,WAAY,UAAW,WAC3D7B,cAPsB,CACtBC,MAAO,YACPC,QAAS,2JAOX9C,EAAIuB,IAAIyH,GAGR,IAmBMY,EAAS,IAAI3G,UAAa,CAC9BC,IAAK,mGACLuB,UAAW,CAAC,WAAY,aACxB7B,cAtBkB,CAClBC,MAAO,oBACPC,QAAS,CACP,CACEhB,KAAM,QACN8I,WAAY,CACV,CACE9I,KAAM,eACN+I,QAAS,GACThH,MAAO,CACLiH,OAAQ,CAAC,WAAY,YACrBC,eAAgB,KAChBC,aAAc,uCAY1BhL,EAAIuB,IAAIqI,EAAQ,GAGhB,IAiDMc,EAAa,IAAIzH,UAAa,CAClCC,IAAK,iHACLuB,UAAW,CAAC,OAAQ,YAAa,aAAc,aAAc,YAAa,UAAW,aAAc,aAAc,cACjH7B,cApDsB,CACtBC,MAAO,cACPC,QAAS,CACP,CACEhB,KAAM,SACNmJ,WAAY,CACV,CACEC,UAAW,aACXX,MAAO,SACPY,YAAY,EACZC,QAAS,GACTC,SAAS,EACTC,OAAQ,KACRC,kBAAmB,YAErB,CACEL,UAAW,OACXX,MAAO,OACPY,YAAY,EACZC,QAAS,GACTC,SAAS,EACTC,OAAQ,KACRC,kBAAmB,YAErB,CACEL,UAAW,aACXX,MAAO,SACPY,YAAY,EACZC,QAAS,GACTC,SAAS,EACTC,OAAQ,KACRC,kBAAmB,YAErB,CACEL,UAAW,YACXX,MAAO,QACPY,YAAY,EACZC,QAAS,GACTC,SAAS,EACTC,OAAQ,CACNE,OAAQ,EACRC,gBAAgB,GAElBF,kBAAmB,kBAa7B,OAFAvL,EAAIuB,IAAImJ,EAAY,GAEb,WACC9E,IACJA,EAAQvF,UACRuF,EAAU,UAMd,qCACE,kDACA,kIACA,qBAAKxG,GAAG,UAAUkB,IAAKG,QC3FdiL,EArCI,WACjB,IAAMjL,EAASlB,mBA2Bf,OA1BAmB,IAAWC,OAASJ,EAEpBf,qBAAU,WACR,IAAMQ,EAAM,IAAIY,IAAI,CAClBb,QAAS,sBAEP6F,EAAU,IAAIhG,IAAQ,CACxBI,IAAKA,EACLC,OAAQ,EAAE,QAAS,QACnBC,KAAM,GACNC,UAAWM,EAAOL,UAId+C,EAAc,IAAIF,UAAa,CACnCC,IAAK,4FAIP,OAFAlD,EAAIuB,IAAI4B,EAAa,GAEd,WACCyC,IACJA,EAAQvF,UACRuF,EAAU,UAKd,qCACE,gEACA,4EACA,qBAAKxG,GAAG,UAAUkB,IAAKG,QCwEdkL,EAhGH,WACV,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,4CAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,eAAT,2BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,yBAAT,qCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,cAAT,0BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,eAAT,mCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,uBAAT,qCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,eAAT,2BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,mBAAT,+BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,wBAAT,2CAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,sBAAT,yCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,oBAAT,gCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,iBAAT,gCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,eAAT,mDAKN,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,yBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,wBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,sBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,uBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBC1FCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,iCAAqBpN,MAAK,YAAkD,IAA/CqN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlJ,SAASmJ,eAAe,SAM1BX,M","file":"static/js/main.6cbf3a77.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 640;","import React, { useEffect, useRef } from \"react\"\nimport { loadModules } from \"esri-loader\"\n\nconst DisplayMapYT = () => {\n  const MapEl = useRef(null)\n\n  useEffect(() => {\n    let view\n    loadModules([\"esri/views/MapView\", \"esri/WebMap\"], {\n      css: true\n    }).then(([MapView, WebMap]) => {\n      const webmap = new WebMap({\n        basemap: \"topo-vector\"\n      })\n      view = new MapView({\n        map: webmap,\n        center: [-118.805, 34.027], // Longitude, latitude\n        zoom: 13, // Zoom level\n        container: MapEl.current // Div element\n      })\n    })\n    return () => {\n      if (!!view) {\n        view.destroy()\n        view = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Display Map with loadModules</h1>\n      <div id=\"viewDiv\" ref={MapEl}></div>\n    </>\n  )\n}\n\nexport default DisplayMapYT\n","export const ARCGIS_API_KEY = \"AAPKde85cc221e40487cb12aab505560784dzTbWxuMc2BVu2bY2edJTdvbhjyHdVLT9ZE0R_Lvvh7lUJ9y71G3prJuYhcrfSD1I\"\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst DisplayMap = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-topographic\" // Basemap layer service\n    })\n\n    let view = new MapView({\n      map: map,\n      center: [-118.805, 34.027], // Longitude, latitude\n      zoom: 11, // Zoom level\n      container: mapRef.current // Div element\n    })\n\n    return () => {\n      if (!!view) {\n        view.destroy()\n        view = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Display Map</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default DisplayMap\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport Locate from \"@arcgis/core/widgets/Locate\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst DisplayYourLocation = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-topographic\" // Basemap layer service\n    })\n    let view = new MapView({\n      container: mapRef.current, // Div element\n      map: map,\n      center: [-40, 28],\n      zoom: 2\n    })\n    const locate = new Locate({\n      view: view,\n      useHeadingEnabled: false,\n      goToOverride: function (view, options) {\n        options.target.scale = 1500\n        return view.goTo(options.target)\n      }\n    })\n    view.ui.add(locate, \"top-left\")\n    return () => {\n      if (!!view) {\n        view.destroy()\n        view = null\n      }\n    }\n  })\n  return (\n    <>\n      <h1>Display Your Location</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default DisplayYourLocation\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport Graphic from \"@arcgis/core/Graphic\"\nimport GraphicsLayer from \"@arcgis/core/layers/GraphicsLayer\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst AddToMap = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-topographic\" // Basemap layer service\n    })\n    let view = new MapView({\n      map: map,\n      center: [-118.805, 34.027], // Longitude, latitude\n      zoom: 13, // Zoom level\n      container: mapRef.current // Div element\n    })\n    const graphicsLayer = new GraphicsLayer()\n    map.add(graphicsLayer)\n\n    //Create a point\n    const point = {\n      type: \"point\",\n      longitude: -118.80657463861,\n      latitude: 34.0005930608889\n    }\n    const simpleMarkerSymbol = {\n      type: \"simple-marker\",\n      color: [226, 119, 40], // Orange\n      outline: {\n        color: [255, 255, 255], // White\n        width: 1\n      }\n    }\n    const pointGraphic = new Graphic({\n      geometry: point,\n      symbol: simpleMarkerSymbol\n    })\n    graphicsLayer.add(pointGraphic)\n\n    // Create a line geometry\n    const polyline = {\n      type: \"polyline\",\n      paths: [\n        [-118.821527826096, 34.0139576938577], //Longitude, latitude\n        [-118.814893761649, 34.0080602407843], //Longitude, latitude\n        [-118.808878330345, 34.0016642996246] //Longitude, latitude\n      ]\n    }\n    const simpleLineSymbol = {\n      type: \"simple-line\",\n      color: [226, 119, 40], // Orange\n      width: 2\n    }\n    const polylineGraphic = new Graphic({\n      geometry: polyline,\n      symbol: simpleLineSymbol\n    })\n    graphicsLayer.add(polylineGraphic)\n\n    // Create a polygon geometry\n    const polygon = {\n      type: \"polygon\",\n      rings: [\n        [-118.818984489994, 34.0137559967283], //Longitude, latitude\n        [-118.806796597377, 34.0215816298725], //Longitude, latitude\n        [-118.791432890735, 34.0163883241613], //Longitude, latitude\n        [-118.79596686535, 34.008564864635], //Longitude, latitude\n        [-118.808558110679, 34.0035027131376] //Longitude, latitude\n      ]\n    }\n    const simpleFillSymbol = {\n      type: \"simple-fill\",\n      color: [227, 139, 79, 0.8], // Orange, opacity 80%\n      outline: {\n        color: [255, 255, 255],\n        width: 1\n      }\n    }\n    const popupTemplate = {\n      title: \"{Name}\",\n      content: \"{Description}\"\n    }\n    const attributes = {\n      Name: \"Graphic\",\n      Description: \"I am a polygon\"\n    }\n    const polygonGraphic = new Graphic({\n      geometry: polygon,\n      symbol: simpleFillSymbol,\n      attributes: attributes,\n      popupTemplate: popupTemplate\n    })\n    graphicsLayer.add(polygonGraphic)\n\n    // cleaning\n    return () => {\n      if (!!view) {\n        view.destroy()\n        view = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Add a point, line, and polygon</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default AddToMap\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst AddFeature = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-topographic\" // Basemap layer service\n    })\n    let view = new MapView({\n      map: map,\n      center: [-118.805, 34.027], // Longitude, latitude\n      zoom: 13, // Zoom level\n      container: mapRef.current // Div element\n    })\n\n    //Trailheads feature layer (points)\n    const trailheadsLayer = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0\"\n    })\n    map.add(trailheadsLayer)\n\n    //Trails feature layer (lines)\n    const trailsLayer = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails_Styled/FeatureServer/0\"\n    })\n    map.add(trailsLayer, 0)\n\n    // Parks and open spaces (polygons)\n    const parksLayer = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space_Styled/FeatureServer/0\"\n    })\n    map.add(parksLayer, 0)\n\n    return () => {\n      if (!!view) {\n        view.destroy()\n        view = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Add a feature layer</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default AddFeature\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport Locator from \"@arcgis/core/tasks/Locator\"\nimport Graphic from \"@arcgis/core/Graphic\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst FindPlaces = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-navigation\"\n    })\n    let view = new MapView({\n      map: map,\n      center: [18.9553, 69.6492], //Longitude, latitude\n      zoom: 13, // Zoom level\n      container: mapRef.current // Div element\n    })\n    const places = [\"Choose a place type...\", \"Parks and Outdoors\", \"Coffee shop\", \"Gas station\", \"Food\", \"Hotel\"]\n    const select = document.createElement(\"select\", \"\")\n    select.setAttribute(\"class\", \"esri-widget esri-select\")\n    select.setAttribute(\"style\", \"width: 175px; font-family: 'Avenir Next W00'; font-size: 1em\")\n    places.forEach(function (p) {\n      const option = document.createElement(\"option\")\n      option.value = p\n      option.innerHTML = p\n      select.appendChild(option)\n    })\n    view.ui.add(select, \"top-right\")\n    const locator = new Locator({\n      url: \"http://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer\"\n    })\n\n    // Find places and add them to the map\n    function findPlaces(category, pt) {\n      locator\n        .addressToLocations({\n          location: pt,\n          categories: [category],\n          maxLocations: 25,\n          outFields: [\"Place_addr\", \"PlaceName\"]\n        })\n        .then(function (results) {\n          view.popup.close()\n          view.graphics.removeAll()\n\n          results.forEach(function (result) {\n            view.graphics.add(\n              new Graphic({\n                attributes: result.attributes, // Data attributes returned\n                geometry: result.location, // Point returned\n                symbol: {\n                  type: \"simple-marker\",\n                  color: \"#000000\",\n                  size: \"12px\",\n                  outline: {\n                    color: \"#ffffff\",\n                    width: \"2px\"\n                  }\n                },\n\n                popupTemplate: {\n                  title: \"{PlaceName}\", // Data attribute names\n                  content: \"{Place_addr}\"\n                }\n              })\n            )\n          })\n        })\n    }\n\n    // Search for places in center of map\n    view.watch(\"stationary\", function (val) {\n      if (val) {\n        findPlaces(select.value, view.center)\n      }\n    })\n\n    // Listen for category changes and find places\n    select.addEventListener(\"change\", function (event) {\n      findPlaces(event.target.value, view.center)\n    })\n\n    return () => {\n      if (!!view) {\n        view.destroy()\n        view = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Find places</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default FindPlaces\n","import React, { useEffect, useRef } from \"react\"\nimport WebMap from \"@arcgis/core/WebMap\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport ScaleBar from \"@arcgis/core/widgets/ScaleBar\"\nimport Legend from \"@arcgis/core/widgets/Legend\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst DisplayWebMap = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const webmap = new WebMap({\n      portalItem: {\n        id: \"41281c51f9de45edaf1c8ed44bb10e30\"\n      }\n    })\n    let view = new MapView({\n      map: webmap,\n      container: mapRef.current // Div element\n    })\n    const scalebar = new ScaleBar({\n      view: view\n    })\n    view.ui.add(scalebar, \"bottom-left\")\n    const legend = new Legend({\n      view: view\n    })\n    view.ui.add(legend, \"top-right\")\n\n    return () => {\n      if (!!view) {\n        view.destroy()\n        view = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Display a Web Map</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default DisplayWebMap\n","import React, { useEffect, useRef } from \"react\"\nimport esriConfig from \"@arcgis/core/config\"\nimport Map from \"@arcgis/core/Map\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport ScaleBar from \"@arcgis/core/widgets/ScaleBar\"\nimport BasemapToggle from \"@arcgis/core/widgets/BasemapToggle\"\nimport Search from \"@arcgis/core/widgets/Search\"\nimport CoordinateConversion from \"@arcgis/core/widgets/CoordinateConversion\"\nimport Home from \"@arcgis/core/widgets/Home\"\nimport Locate from \"@arcgis/core/widgets/Locate\"\nimport Graphic from \"@arcgis/core/Graphic\"\n\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst SfiEmbeddedWidgets = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"streets\"\n    })\n    let mapView = new MapView({\n      container: mapRef.current, // Div element Reference to the view div created in step 5\n      map: map, // Reference to the map object created before the view\n      zoom: 4, // Sets zoom level based on level of detail (LOD)\n      center: [-86.049, 38.485] // Sets center point of view using longitude,latitude\n    })\n\n    const homeWidget = new Home({\n      view: mapView\n    })\n    // adds the home widget to the top left corner of the MapView\n    mapView.ui.add(homeWidget, { position: \"top-left\", index: 0 })\n\n    // Locate widget may only appear if page is served over HTTPS\n    const locateWidget = new Locate({\n      view: mapView, // Attaches the Locate button to the view\n      graphic: new Graphic({\n        symbol: { type: \"simple-marker\" } // overwrites the default symbol used for the\n        // graphic placed at the location of the user when found\n      })\n    })\n    mapView.ui.add(locateWidget, \"top-left\")\n\n    const searchWidget = new Search({\n      view: mapView\n    })\n    // Adds the search widget below other elements in\n    // the top left corner of the view\n    mapView.ui.add(searchWidget, { position: \"top-right\", index: 0 })\n\n    // 1 - Create the widget\n    const basemapToggle = new BasemapToggle({\n      // 2 - Set properties\n      view: mapView, // view that provides access to the map's 'topo-vector' basemap\n      nextBasemap: \"hybrid\" // allows for toggling to the 'hybrid' basemap\n    })\n    // Add widget to the top right corner of the view\n    mapView.ui.add(basemapToggle, \"top-right\")\n\n    const scaleBar = new ScaleBar({\n      view: mapView\n    })\n    // Add widget to the bottom left corner of the view\n    mapView.ui.add(scaleBar, {\n      position: \"bottom-left\"\n    })\n    const ccWidget = new CoordinateConversion({\n      view: mapView,\n      multipleConversions: false\n    })\n    // Adds widget in the bottom left corner of the view\n    mapView.ui.add(ccWidget, \"bottom-right\")\n\n    return () => {\n      if (!!mapView) {\n        mapView.destroy()\n        mapView = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>SFI Embedded Widgets Sample</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default SfiEmbeddedWidgets\n","import React, { useEffect, useRef } from \"react\"\nimport esriConfig from \"@arcgis/core/config\"\nimport Map from \"@arcgis/core/Map\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport ScaleBar from \"@arcgis/core/widgets/ScaleBar\"\nimport BasemapToggle from \"@arcgis/core/widgets/BasemapToggle\"\nimport Search from \"@arcgis/core/widgets/Search\"\nimport CoordinateConversion from \"@arcgis/core/widgets/CoordinateConversion\"\nimport Home from \"@arcgis/core/widgets/Home\"\nimport Locate from \"@arcgis/core/widgets/Locate\"\nimport Graphic from \"@arcgis/core/Graphic\"\nimport GraphicsLayer from \"@arcgis/core/layers/GraphicsLayer\"\nimport Sketch from \"@arcgis/core/widgets/Sketch\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst SfiSketchPolygon = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n  let mapView\n  let sketchLayer\n  let sketch\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"streets\"\n    })\n    mapView = new MapView({\n      container: mapRef.current, // Div element Reference to the view div created in step 5\n      map: map, // Reference to the map object created before the view\n      zoom: 15, // Sets zoom level based on level of detail (LOD)\n      center: [-96.73699, 43.494465] // Sets center point of view using longitude,latitude\n    })\n\n    //// add some cool widgets to enhance its default functionality\n    const homeWidget = new Home({\n      view: mapView\n    })\n    mapView.ui.add(homeWidget, { position: \"top-left\", index: 0 })\n\n    const locateWidget = new Locate({\n      view: mapView,\n      graphic: new Graphic({\n        symbol: { type: \"simple-marker\" }\n      })\n    })\n    mapView.ui.add(locateWidget, \"top-left\")\n\n    const basemapToggle = new BasemapToggle({\n      view: mapView,\n      nextBasemap: \"hybrid\"\n    })\n    mapView.ui.add(basemapToggle, { position: \"top-left\", index: 0 })\n\n    const searchWidget = new Search({\n      view: mapView\n    })\n    mapView.ui.add(searchWidget, { position: \"top-right\", index: 0 })\n\n    const scaleBar = new ScaleBar({\n      view: mapView\n    })\n    mapView.ui.add(scaleBar, { position: \"bottom-left\" })\n\n    const ccWidget = new CoordinateConversion({\n      view: mapView,\n      multipleConversions: false\n    })\n    mapView.ui.add(ccWidget, \"bottom-right\")\n\n    //////// SETUP THE SKETCH WIDGET ////////\n    sketchLayer = new GraphicsLayer({ id: \"sketchLayer\" })\n    map.add(sketchLayer)\n    sketch = new Sketch({\n      layer: sketchLayer,\n      view: mapView,\n      // graphic will be selected as soon as it is created\n      creationMode: \"single\",\n      //availableCreateTools: [\"polygon\", \"rectangle\", \"circle\"],\n      visibleElements: {\n        createTools: {\n          point: false,\n          polyline: false,\n          polygon: true,\n          rectangle: true,\n          circle: true\n        },\n        selectionTools: {\n          \"rectangle-selection\": false,\n          \"lasso-selection\": false\n        },\n        undoRedoMenu: false\n      }\n    })\n    // // disable the \"click select tool\" by default\n    sketch.viewModel.updateOnGraphicClick = false\n    mapView.ui.add(sketch, \"top-right\")\n\n    // wire up event handlers for create and delete events\n    sketch.on(\"create\", function (event) {\n      console.log(event)\n      if (event.state === \"complete\") {\n        console.log(event.graphic)\n        sketch.visibleElements.createTools.polygon = false\n        sketch.visibleElements.createTools.rectangle = false\n        sketch.visibleElements.createTools.circle = false\n        sketch.viewModel.updateOnGraphicClick = true\n        sketch.visibleElements.undoRedoMenu = true\n      }\n    })\n\n    // handle delete graphic\n    // there doesn't appear to be a way to disable delete functionality,\n    // maybe can set some css on U/I to display:none to hide the delete button from user\n    sketch.on(\"delete\", function (event) {\n      console.log(event)\n      if (event.type === \"delete\") {\n        if (window.confirm(\"Are you sure you want to delete?\")) {\n          //allow it to be deleted and re-enable the draw tools\n          sketch.visibleElements.createTools.polygon = true\n          sketch.visibleElements.createTools.rectangle = true\n          sketch.visibleElements.createTools.circle = true\n          sketch.viewModel.updateOnGraphicClick = false\n          sketch.visibleElements.undoRedoMenu = false\n        } else {\n          // if you don't want it deleted, just put it back in the layer\n          const deleted = event.graphics[0]\n          sketchLayer.add(deleted)\n        }\n      }\n    })\n\n    // cleaning\n    return () => {\n      if (!!mapView) {\n        mapView.destroy()\n        mapView = null\n      }\n    }\n  })\n\n  //hook up the button!\n  const okButtonHandler = function (event) {\n    const graphic = sketchLayer.graphics.getItemAt(0)\n    if (graphic) {\n      alert(\"Nice work, that's a fine looking polygon!\")\n      console.log(graphic)\n      const oldSymbol = graphic.symbol\n      const newSymbol = {\n        type: \"simple-fill\",\n        style: \"solid\",\n        color: \"blue\",\n        outline: {\n          color: \"white\",\n          width: \"2.0\"\n        }\n      }\n      graphic.symbol = newSymbol\n      window.setTimeout(function () {\n        graphic.symbol = oldSymbol\n      }, 250)\n    } else {\n      alert(\"You must draw a polygon.\")\n    }\n  }\n\n  const cancelButtonHandler = function (event) {\n    sketchLayer.removeAll()\n    sketch.visibleElements.createTools.polygon = true\n    sketch.visibleElements.createTools.rectangle = true\n    sketch.visibleElements.createTools.circle = true\n    sketch.viewModel.updateOnGraphicClick = false\n    sketch.visibleElements.undoRedoMenu = false\n  }\n\n  return (\n    <>\n      <h1>SFI Sketch Polygon Sample</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n      <div>\n        <button id=\"ok-button\" onClick={okButtonHandler}>\n          OK\n        </button>\n        <button id=\"cancel-button\" onClick={cancelButtonHandler}>\n          Cancel\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default SfiSketchPolygon\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport GraphicsLayer from \"@arcgis/core/layers/GraphicsLayer\"\nimport Sketch from \"@arcgis/core/widgets/Sketch\"\nimport BasemapToggle from \"@arcgis/core/widgets/BasemapToggle\"\nimport BasemapGallery from \"@arcgis/core/widgets/BasemapGallery\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst ExploringSketch = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-topographic\" // Basemap layer service\n    })\n    let mapView = new MapView({\n      map: map,\n      center: [-118.805, 34.027], // Longitude, latitude\n      zoom: 13, // Zoom level\n      container: mapRef.current // Div element\n    })\n\n    let sketchLayer = new GraphicsLayer({ id: \"sketchLayer\" })\n    map.add(sketchLayer)\n    let sketch = new Sketch({\n      layer: sketchLayer,\n      view: mapView,\n      creationMode: \"single\",\n      visibleElements: {\n        createTools: {\n          point: true,\n          polyline: true,\n          polygon: true,\n          rectangle: true,\n          circle: true\n        },\n        selectionTools: {\n          \"rectangle-selection\": true,\n          \"lasso-selection\": true\n        },\n        undoRedoMenu: true\n      }\n    })\n    // // disable the \"click select tool\" by default\n    sketch.viewModel.updateOnGraphicClick = false\n    mapView.ui.add(sketch, \"top-right\")\n\n    // wire up event handlers for create and delete events\n    sketch.on(\"create\", function (event) {\n      // console.log(event)\n      if (event.state === \"complete\") {\n        console.log(event.graphic)\n        sketch.visibleElements.createTools.polygon = false\n        sketch.visibleElements.createTools.rectangle = false\n        sketch.visibleElements.createTools.circle = false\n        sketch.viewModel.updateOnGraphicClick = true\n        sketch.visibleElements.undoRedoMenu = true\n      }\n    })\n\n    const basemapToggle = new BasemapToggle({\n      view: mapView,\n      nextBasemap: \"arcgis-imagery\"\n    })\n    mapView.ui.add(basemapToggle, \"bottom-right\")\n\n    // Select basemaps from a gallery\n    const basemapGallery = new BasemapGallery({\n      view: mapView,\n      source: {\n        query: {\n          title: '\"World Basemaps for Developers\" AND owner:esri'\n        }\n      }\n    })\n    mapView.ui.add(basemapGallery, \"top-right\") // Add to the view\n\n    return () => {\n      if (!!mapView) {\n        mapView.destroy()\n        mapView = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Exploring Sketch</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default ExploringSketch\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst StyleFeatureLayer = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-topographic\" // Basemap layer service\n    })\n    let view = new MapView({\n      map: map,\n      center: [-118.805, 34.027], // Longitude, latitude\n      zoom: 13, // Zoom level\n      container: mapRef.current // Div element\n    })\n\n    const trailheadsRenderer = {\n      type: \"simple\",\n      symbol: {\n        type: \"picture-marker\",\n        url: \"http://static.arcgis.com/images/Symbols/NPS/npsPictograph_0231b.png\",\n        width: \"18px\",\n        height: \"18px\"\n      }\n    }\n    const trailheadsLabels = {\n      symbol: {\n        type: \"text\",\n        color: \"#FFFFFF\",\n        haloColor: \"#333\",\n        haloSize: \"8px\",\n        font: {\n          size: \"12px\",\n          family: \"Noto Sans\",\n          style: \"italic\",\n          weight: \"normal\"\n        }\n      },\n      labelPlacement: \"above-center\",\n      labelExpressionInfo: {\n        expression: \"$feature.TRL_NAME\"\n      }\n    }\n    // Create the layer and set the renderer\n    const trailheads = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0\",\n      renderer: trailheadsRenderer,\n      labelingInfo: [trailheadsLabels]\n    })\n    map.add(trailheads)\n\n    // Define a unique value renderer and symbols\n    const trailsRenderer = {\n      type: \"simple\",\n      symbol: {\n        color: \"orange\",\n        type: \"simple-line\",\n        style: \"solid\"\n      },\n      visualVariables: [\n        {\n          type: \"size\",\n          field: \"ELEV_GAIN\",\n          minDataValue: 0,\n          maxDataValue: 2300,\n          minSize: \"3px\",\n          maxSize: \"7px\"\n        }\n      ]\n    }\n    // Create the layer and set the renderer\n    const trails = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0\",\n      renderer: trailsRenderer,\n      opacity: 0.75\n    })\n    // Add the layer\n    map.add(trails, 0)\n\n    // Add bikes only trails\n    const bikeTrailsRenderer = {\n      type: \"simple\",\n      symbol: {\n        type: \"simple-line\",\n        style: \"short-dot\",\n        color: \"blue\",\n        width: \"2px\"\n      }\n    }\n    const bikeTrails = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0\",\n      renderer: bikeTrailsRenderer,\n      definitionExpression: \"USE_BIKE = 'YES'\"\n    })\n    map.add(bikeTrails, 1)\n\n    // Add parks with a class breaks renderer and unique symbols\n    function createFillSymbol(value, color) {\n      return {\n        value: value,\n        symbol: {\n          color: color,\n          type: \"simple-fill\",\n          style: \"solid\",\n          outline: {\n            style: \"none\"\n          }\n        },\n        label: value\n      }\n    }\n    const openSpacesRenderer = {\n      type: \"unique-value\",\n      field: \"TYPE\",\n      uniqueValueInfos: [createFillSymbol(\"Natural Areas\", \"#9E559C\"), createFillSymbol(\"Regional Open Space\", \"#A7C636\"), createFillSymbol(\"Local Park\", \"#149ECE\"), createFillSymbol(\"Regional Recreation Park\", \"#ED5151\")]\n    }\n    // Create the layer and set the renderer\n    const openspaces = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0\",\n      renderer: openSpacesRenderer,\n      opacity: 0.5\n    })\n    // Add the layer\n    map.add(openspaces, 0)\n\n    //cleaning\n    return () => {\n      if (!!view) {\n        view.destroy()\n        view = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Style a feature layer</h1>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default StyleFeatureLayer\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\"\n\nimport GraphicsLayer from \"@arcgis/core/layers/GraphicsLayer\"\nimport Sketch from \"@arcgis/core/widgets/Sketch\"\nimport BasemapToggle from \"@arcgis/core/widgets/BasemapToggle\"\nimport BasemapGallery from \"@arcgis/core/widgets/BasemapGallery\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst DisplayPopUp = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-topographic\" // Basemap layer service\n    })\n    let mapView = new MapView({\n      map: map,\n      center: [-118.805, 34.027], // Longitude, latitude\n      zoom: 13, // Zoom level\n      container: mapRef.current // Div element\n    })\n\n    // Define a pop-up for Trailheads\n    const popupTrailheads = {\n      title: \"Trailhead\",\n      content: \"<b>Trail:</b> {TRL_NAME}<br><b>City:</b> {CITY_JUR}<br><b>Cross Street:</b> {X_STREET}<br><b>Parking:</b> {PARKING}<br><b>Elevation:</b> {ELEV_FT} ft\"\n    }\n    const trailheads = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads_Styled/FeatureServer/0\",\n      outFields: [\"TRL_NAME\", \"CITY_JUR\", \"X_STREET\", \"PARKING\", \"ELEV_FT\"],\n      popupTemplate: popupTrailheads\n    })\n    map.add(trailheads)\n\n    // Define a popup for Trails\n    const popupTrails = {\n      title: \"Trail Information\",\n      content: [\n        {\n          type: \"media\",\n          mediaInfos: [\n            {\n              type: \"column-chart\",\n              caption: \"\",\n              value: {\n                fields: [\"ELEV_MIN\", \"ELEV_MAX\"],\n                normalizeField: null,\n                tooltipField: \"Min and max elevation values\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n    const trails = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails_Styled/FeatureServer/0\",\n      outFields: [\"TRL_NAME\", \"ELEV_GAIN\"],\n      popupTemplate: popupTrails\n    })\n    map.add(trails, 0)\n\n    // Define popup for Parks and Open Spaces\n    const popupOpenspaces = {\n      title: \"{PARK_NAME}\",\n      content: [\n        {\n          type: \"fields\",\n          fieldInfos: [\n            {\n              fieldName: \"AGNCY_NAME\",\n              label: \"Agency\",\n              isEditable: true,\n              tooltip: \"\",\n              visible: true,\n              format: null,\n              stringFieldOption: \"text-box\"\n            },\n            {\n              fieldName: \"TYPE\",\n              label: \"Type\",\n              isEditable: true,\n              tooltip: \"\",\n              visible: true,\n              format: null,\n              stringFieldOption: \"text-box\"\n            },\n            {\n              fieldName: \"ACCESS_TYP\",\n              label: \"Access\",\n              isEditable: true,\n              tooltip: \"\",\n              visible: true,\n              format: null,\n              stringFieldOption: \"text-box\"\n            },\n            {\n              fieldName: \"GIS_ACRES\",\n              label: \"Acres\",\n              isEditable: true,\n              tooltip: \"\",\n              visible: true,\n              format: {\n                places: 2,\n                digitSeparator: true\n              },\n              stringFieldOption: \"text-box\"\n            }\n          ]\n        }\n      ]\n    }\n    const openspaces = new FeatureLayer({\n      url: \"https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space_Styled/FeatureServer/0\",\n      outFields: [\"TYPE\", \"PARK_NAME\", \"AGNCY_NAME\", \"ACCESS_TYP\", \"GIS_ACRES\", \"TRLS_MI\", \"TOTAL_GOOD\", \"TOTAL_FAIR\", \"TOTAL_POOR\"],\n      popupTemplate: popupOpenspaces\n    })\n    map.add(openspaces, 0)\n\n    return () => {\n      if (!!mapView) {\n        mapView.destroy()\n        mapView = null\n      }\n    }\n  })\n\n  return (\n    <>\n      <h1>Display a pop-up</h1>\n      <p>Click on the trails or trailheads to view a pop-up that contains a bar chart with elevation data.</p>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default DisplayPopUp\n","import React, { useEffect, useRef } from \"react\"\nimport Map from \"@arcgis/core/Map\"\nimport esriConfig from \"@arcgis/core/config\"\nimport MapView from \"@arcgis/core/views/MapView\"\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\"\nimport { ARCGIS_API_KEY } from \"../globalVariables\"\n\nconst ImportData = () => {\n  const mapRef = useRef()\n  esriConfig.apiKey = ARCGIS_API_KEY\n\n  useEffect(() => {\n    const map = new Map({\n      basemap: \"arcgis-navigation\"\n    })\n    let mapView = new MapView({\n      map: map,\n      center: [-118.805, 34.027], // Longitude, latitude\n      zoom: 12, // Zoom level\n      container: mapRef.current // Div element\n    })\n\n    //Trails feature layer (lines)\n    const trailsLayer = new FeatureLayer({\n      url: \"https://services3.arcgis.com/rVaRpzRscHx9PnNL/arcgis/rest/services/trails/FeatureServer\"\n    })\n    map.add(trailsLayer, 0)\n\n    return () => {\n      if (!!mapView) {\n        mapView.destroy()\n        mapView = null\n      }\n    }\n  })\n  return (\n    <>\n      <h1>Import data as a feature layer</h1>\n      <p>Data shown from ArcGIS Online hosted layer.</p>\n      <div id=\"viewDiv\" ref={mapRef}></div>\n    </>\n  )\n}\n\nexport default ImportData\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport DisplayMapYT from \"./pages/DisplayMapYT.js\"\nimport DisplayMap from \"./pages/DisplayMap.js\"\nimport DisplayYourLocation from \"./pages/DisplayYourLocation.js\"\nimport AddToMap from \"./pages/AddToMap.js\"\nimport AddFeature from \"./pages/AddFeature.js\"\nimport FindPlaces from \"./pages/FindPlaces.js\"\nimport DisplayWebMap from \"./pages/DisplayWebMap.js\"\nimport SfiEmbeddedWidgets from \"./pages/SfiEmbeddedWidgets.js\"\nimport SfiSketchPolygon from \"./pages/SfiSketchPolygon.js\"\nimport ExploringSketch from \"./pages/ExploringSketch.js\"\nimport StyleFeatureLayer from \"./pages/StyleFeatureLayer.js\"\nimport DisplayPopUp from \"./pages/DisplayPopUp.js\"\nimport ImportData from \"./pages/ImportData.js\"\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Display Map with loadModules</Link>\n            </li>\n            <li>\n              <Link to=\"/display-map\">Display Map</Link>\n            </li>\n            <li>\n              <Link to=\"/display-your-location\">Display Your Location</Link>\n            </li>\n            <li>\n              <Link to=\"/add-to-map\">Add To Map</Link>\n            </li>\n            <li>\n              <Link to=\"/add-feature\">Add a Feature Layer</Link>\n            </li>\n            <li>\n              <Link to=\"/style-feature-layer\">Style a Feature Layer</Link>\n            </li>\n            <li>\n              <Link to=\"/find-places\">Find places</Link>\n            </li>\n            <li>\n              <Link to=\"/display-web-map\">Display Web Map</Link>\n            </li>\n            <li>\n              <Link to=\"/sfi-embedded-widgets\">SFI Embedded Widgets Sample</Link>\n            </li>\n            <li>\n              <Link to=\"/sfi-sketch-polygon\">SFI Sketch Polygon Sample</Link>\n            </li>\n            <li>\n              <Link to=\"/exploring-sketch\">Exploring Sketch</Link>\n            </li>\n            <li>\n              <Link to=\"/display-popup\">Display a pop-up</Link>\n            </li>\n            <li>\n              <Link to=\"/import-data\">Import data as a feature layer</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <main>\n          <Switch>\n            <Route path=\"/display-map\">\n              <DisplayMap />\n            </Route>\n            <Route path=\"/display-your-location\">\n              <DisplayYourLocation />\n            </Route>\n            <Route path=\"/add-to-map\">\n              <AddToMap />\n            </Route>\n            <Route path=\"/add-feature\">\n              <AddFeature />\n            </Route>\n            <Route path=\"/find-places\">\n              <FindPlaces />\n            </Route>\n            <Route path=\"/display-web-map\">\n              <DisplayWebMap />\n            </Route>\n            <Route path=\"/sfi-embedded-widgets\">\n              <SfiEmbeddedWidgets />\n            </Route>\n            <Route path=\"/sfi-sketch-polygon\">\n              <SfiSketchPolygon />\n            </Route>\n            <Route path=\"/exploring-sketch\">\n              <ExploringSketch />\n            </Route>\n            <Route path=\"/style-feature-layer\">\n              <StyleFeatureLayer />\n            </Route>\n            <Route path=\"/display-popup\">\n              <DisplayPopUp />\n            </Route>\n            <Route path=\"/import-data\">\n              <ImportData />\n            </Route>\n            <Route path=\"/\">\n              <DisplayMapYT />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}